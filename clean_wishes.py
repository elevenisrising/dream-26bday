#!/usr/bin/env python3
"""
Clean the birthday wishes CSV file to extract only username and message
"""

import csv
import os
import re

def clean_wishes_csv():
    """Clean the wishes CSV file and create JS hardcoded data file"""
    
    input_file = "assets/wishes/form to collect birthday wishes (for dream).csv"
    output_js = "js/wishes-data.js"
    
    # Check if input file exists
    if not os.path.exists(input_file):
        print(f"‚ùå Input file not found: {input_file}")
        return
    
    cleaned_wishes = []
    
    try:
        with open(input_file, 'r', encoding='utf-8') as file:
            reader = csv.reader(file)
            
            # Skip header row
            next(reader, None)
            
            for row_num, row in enumerate(reader, start=2):
                if len(row) >= 3:
                    timestamp = row[0].strip()
                    username = row[1].strip()
                    message = row[2].strip()
                    
                    # Clean username - remove @ symbols and quotes
                    username = username.replace('"', '').replace('@', '').replace('/', '').strip()
                    
                    # Clean message - remove quotes and extra whitespace
                    message = message.replace('"', '').strip()
                    
                    # Skip entries with problematic content
                    if any(bad_word in message.lower() for bad_word in ['deaththreat', "don't include this"]):
                        print(f"‚ö†Ô∏è  Skipping row {row_num}: Contains excluded content")
                        continue
                    
                    # Skip very short messages (less than 10 characters)
                    if len(message) < 10:
                        print(f"‚ö†Ô∏è  Skipping row {row_num}: Message too short")
                        continue
                    
                    # Skip empty usernames
                    if not username:
                        username = "Anonymous Fan"
                    
                    cleaned_wishes.append([username, message])
                    print(f"‚úì Row {row_num}: {username[:20]}... -> {message[:50]}...")
                else:
                    print(f"‚ö†Ô∏è  Skipping row {row_num}: Not enough columns")
        
        # Write cleaned data directly to JavaScript file
        with open(output_js, 'w', encoding='utf-8') as file:
            file.write("// Birthday wishes data - auto-generated by Python script\n")
            file.write("// DO NOT EDIT MANUALLY - this file is overwritten by clean_wishes.py\n\n")
            file.write("const WISHES_DATA = [\n")
            
            for i, wish in enumerate(cleaned_wishes):
                author = wish[0].replace('"', '\\"').replace("'", "\\'")
                message = wish[1].replace('"', '\\"').replace("'", "\\'")
                
                file.write(f'    {{ author: "{author}", text: "{message}" }}')
                if i < len(cleaned_wishes) - 1:
                    file.write(",")
                file.write("\n")
            
            file.write("];\n\n")
            file.write("// Export for use in main script\n")
            file.write("window.WISHES_DATA = WISHES_DATA;\n")
        
        print(f"\n‚úÖ Successfully cleaned {len(cleaned_wishes)} wishes!")
        print(f"üìÅ JS output: {output_js}")
        print(f"üìä Original file: {input_file}")
        print(f"üéØ Ready for hardcoded import - no CSV needed!")
        
        # Show some sample entries
        print(f"\nüìù Sample entries:")
        for i, wish in enumerate(cleaned_wishes[:5]):
            print(f"   {i+1}. {wish[0]}: \"{wish[1][:60]}...\"")
            
    except Exception as e:
        print(f"‚ùå Error processing CSV: {e}")

def main():
    """Main function"""
    print("üßπ Starting CSV cleaning process...")
    clean_wishes_csv()
    print("üéâ Cleaning complete!")

if __name__ == "__main__":
    main()